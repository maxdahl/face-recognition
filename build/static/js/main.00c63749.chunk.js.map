{"version":3,"sources":["components/logo/logo.png","components/navigation/Navigation.js","components/logo/Logo.js","components/rank/Rank.js","components/imageLinkForm/ImageLinkForm.js","components/faceRecognition/FaceRecognition.js","components/signin/Signin.js","components/register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","onClick","className","Logo","tilt_default","options","max","style","height","width","alt","src","logo","Rank","user","concat","name","entries","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceRecognition","faceRegionBoxes","imgSrc","faceBoxes","map","faceBox","console","log","key","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signinEmail","target","value","onPasswordChange","signinPassword","onSubmitSignin","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","updateUser","_this2","htmlFor","Component","Register","onRegisterNameChange","registerName","onRegisterEmailChange","registerEmail","onRegisterPasswordChange","registerPassword","onRegisterSubmit","resp","particleOptions","particles","number","density","enable","value_area","initialState","imageLink","route","joined","App","onImageLinkChange","onDetectClick","clarifai","models","predict","count","assign","displayFaceBox","calculateFaceLocation","catch","err","data","faceRegions","outputs","regions","img","document","getElementById","Number","region","faceRegion","region_info","bounding_box","left_col","top_row","right_col","bottom_row","boxes","Clarifai","apiKey","output","push","signin_Signin","register_Register","rank_Rank","imageLinkForm_ImageLinkForm","components_faceRecognition_FaceRecognition","particles_default","params","components_navigation_Navigation","components_logo_Logo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00c63749.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ff8a4ad9.png\";","import React from 'react';\nimport './Navigation.css';\n\nconst Navigation = ({onRouteChange, isSignedIn}) => {\n\tif(isSignedIn) {\n\t\treturn (\n\t\t\t<nav>\n\t\t\t\t<p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>\n\t\t\t\t\tSign Out\n\t\t\t\t</p>\n\t\t\t</nav>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<nav>\n\t\t\t\t<p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>\n\t\t\t\t\tSignIn\n\t\t\t\t</p>\n\t\t\t\t<p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>\n\t\t\t\t\tRegister\n\t\t\t\t</p>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt';\n\nimport logo from './logo.png';\nimport './Logo.css';\n\nconst Logo = () => {\n\treturn (\n\t\t<div className='ma4 mt0'>\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 50 }} style={{ height: 150, width: 150 }} >\n \t\t\t\t<div className=\"Tilt-inner\">\n \t\t\t\t\t<img alt='logo' src={logo} />\n\t\t\t\t</div>\n\t\t\t</Tilt>\n\t\t</div>\n\t);\n}\n\nexport default Logo;","import React from 'react';\n\n\nconst Rank = ({user}) => {\n\treturn (\n\t\t<div>\n\t\t\t<div className='white f3'>\n\t\t\t\t{`Yo ${user.name}, your current rank is...`}\n\t\t\t</div>\n\t\t\t<div className='white f2'>\n\t\t\t\t{user.entries}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Rank;","import React from 'react';\n\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\n\treturn(\n\t\t<div>\n\t\t\t<p className='f3'>\n\t\t\t\t{'This magic brain will detect faces in your pictures'}\n\t\t\t</p>\n\t\t\t\n\t\t\t<div className='center w-80 w-60-l pa4 br3 shadow-5'>\n\t\t\t\t<input className='w-100 f4 pa2 center' type='text' onChange={onInputChange} />\n\t\t\t\t<button className='grow f4 link ph3 pv2 white bg-light-purple' onClick={onButtonSubmit}>Detect</button> \n\t\t\t</div>\n\t\t</div>\n\t);\n}\t\n\nexport default ImageLinkForm;","import React from 'react';\nimport './FaceRecognition.css'\n\nconst FaceRecognition = ({faceRegionBoxes, imgSrc}) => {\n\tconst faceBoxes = faceRegionBoxes.map(faceBox => {\n\t\tconsole.log(faceBox);\n\t\treturn (\n\t\t\t<div key={faceBox.id} className='boundingBox' style=\n\t\t\t\t{{\n\t\t\t\t\t\t\ttop: faceBox.topRow,\n\t\t\t\t\t\t\tright: faceBox.rightCol,\n\t\t\t\t\t\t\tbottom: faceBox.bottomRow,\n\t\t\t\t\t\t\tleft: faceBox.leftCol,\n\t\t\t\t}}>\n\t\t\t</div>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div className='center ma'>\n\t\t\t<div className='absolute mt2'>\n\t\t\t\t<img id='inputImage' alt='processed image' src={imgSrc} width='500px' height='auto'/>\n\t\t\t\t{ faceBoxes }\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default FaceRecognition;","import React, {Component} from 'react';\n\nclass Signin extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tsigninEmail: '',\n\t\t\tsigninPassword: ''\n\t\t}\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({signinEmail: event.target.value});\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({signinPassword: event.target.value});\n\t}\n\n\tonSubmitSignin = (event) => {\n\t\tfetch('https://face-recognition-sze.herokuapp.com/signin', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.signinEmail,\n\t\t\t\tpassword: this.state.signinPassword\n\t\t\t}),\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(user => {\n\t\t\tif(user.id) {\n\t\t\t\tthis.props.updateUser(user);\n\t\t\t\tthis.props.onRouteChange('home');\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<main className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n\t\t\t\t<div className=\"pa4 black-80\">\n\t\t  \t\t\t<div className=\"measure\">\n\t\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t\t      <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\n\t\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t\t\t        <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\n\t\t\t\t\t      </div>\n\t\t\t\t\t      <div className=\"mv3\">\n\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t\t\t        <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\n\t\t\t\t\t      </div>\n\t\t\t\t\t    </fieldset>\n\t\t\t\t\t    <div className=\"\">\n\t\t\t\t\t      <input onClick={this.onSubmitSignin} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" />\n\t\t\t\t\t    </div>\n\t\t\t\t\t    <div className=\"lh-copy mt3\">\n\t\t\t\t\t      <p onClick={() => this.props.onRouteChange('register')} className=\"pointer f6 link dim black db\">Register</p>\n\t\t\t\t\t    </div>\n\t\t\t\t  \t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t);\n\t}\n}\n\nexport default Signin;","import React, {Component} from 'react';\n\nclass Register extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tregisterName: '',\n\t\t\tregisterEmail: '',\n\t\t\tregisterPassword: '',\n\t\t}\n\t}\n\n\tonRegisterNameChange = (event) => {\n\t\tthis.setState({registerName: event.target.value});\n\t}\n\n\tonRegisterEmailChange = (event) => {\n\t\tthis.setState({registerEmail: event.target.value})\n\t}\n\n\tonRegisterPasswordChange = (event) => {\n\t\tthis.setState({registerPassword: event.target.value});\n\t}\n\n\tonRegisterSubmit = () => {\n\t\tconsole.log(this.state);\n\t\tfetch('https://face-recognition-sze.herokuapp.com/register', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: this.state.registerName,\n\t\t\t\temail: this.state.registerEmail,\n\t\t\t\tpassword: this.state.registerPassword\n\t\t\t}),\t\n\t\t})\n\t\t.then(resp => resp.json())\n\t\t.then(user => {\n\t\t\tif(user) {\n\t\t\t\tthis.props.updateUser(user)\n\t\t\t\tthis.props.onRouteChange('home');\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<main className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n\t\t\t\t<div className=\"pa4 black-80\">\n\t\t\t  \t\t<div className=\"measure\">\n\t\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t\t    \t<legend className=\"f2 fw6 ph0 mh0\">Register</legend>\n\t\t\t\t\t      \t<div className=\"mt3\">\n\t\t\t\t\t        \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n\t\t\t\t\t        \t<input onChange={this.onRegisterNameChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\" id=\"name\" />\n\t\t\t\t\t      \t</div>\n\t\t\t\t\t      \t<div className=\"mt3\">\n\t\t\t\t\t        \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t\t\t        \t<input onChange={this.onRegisterEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\n\t\t\t\t\t      \t</div>\n\t\t\t\t\t      \t<div className=\"mv3\">\n\t\t\t\t\t        \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t\t\t        \t<input onChange={this.onRegisterPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\n\t\t\t\t\t      \t</div>\n\t\t\t\t\t    </fieldset>\n\t\t\t\t\t    <div className=\"\">\n\t\t\t\t\t    \t<input onClick={this.onRegisterSubmit} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" />\n\t\t\t\t\t    </div>\n\t\t\t\t\t    <div className=\"lh-copy mt3\">\n\t\t\t\t\t    \t<p onClick={() => this.props.onRouteChange('signin')} className=\"pointer f6 link dim black db\">SignIn</p>\n\t\t\t\t\t    </div>\n\t\t\t\t  \t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t);\n\t}\n}\n\nexport default Register;","import React, { Component } from 'react';\n\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/logo/Logo';\nimport Rank from './components/rank/Rank';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\n\nimport Signin from './components/signin/Signin';\nimport Register from './components/register/Register';\n\nimport './App.css';\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800,\n      }\n    }\n  }\n}\n\nconst initialState = {\n  imageLink: '',\n  faceRegionBoxes: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component { \n  constructor() {\n    super();\n\n    this.state = initialState;\n    this.clarifai = new Clarifai.App({\n      apiKey: '5533bbd988e64868a9810399ab3f4698'\n    });\n  }\n\n  updateUser = (user) => {\n    this.setState({user: user})\n  }\n\n  onImageLinkChange = (event) => {\n    this.setState({\n      faceRegionBoxes: [],\n      imageLink: event.target.value\n    });\n  }\n\n  onDetectClick = (event) => {\n    this.clarifai.models.predict(\n        \"a403429f2ddf4b49b307e318f00e528b\", this.state.imageLink)\n        .then(response => {\n            if(response) {\n                fetch('https://face-recognition-sze.herokuapp.com/entry/' + this.state.user.id, {\n                    method: 'put',\n                    headers: {'Content-Type': 'application/json'}\n                })\n                .then(resp => resp.json())\n                .then(count => {\n                    this.setState(Object.assign(this.state.user, {entries: count}));\n                });\n            }\n\n            this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'home')\n      this.setState({isSignedIn: true});\n    else if(route === 'signout') {\n      this.setState(initialState);\n    }\n\n    this.setState({route: route});\n  }\n\n  calculateFaceLocation = (data) => {\n    const faceRegions = data.outputs[0].data.regions;\n    const img = document.getElementById('inputImage');\n    const width = Number(img.width);\n    const height = Number(img.height);\n    const boxes = faceRegions.map(region => {\n    const faceRegion = region.region_info.bounding_box;\n\n    return {\n        id: region.id,\n        leftCol: faceRegion.left_col * width,\n        topRow: faceRegion.top_row * height,\n        rightCol: width - (faceRegion.right_col * width),\n        bottomRow: height - (faceRegion.bottom_row * height)\n      };\n    });\n\n    return boxes; \n  }\n\n  displayFaceBox = (boxes) => {\n    this.setState({faceRegionBoxes: boxes});\n  }\n\n  render() {\n    const output = [];\n\n    if(this.state.route === 'signin') {\n      output.push(<Signin key='signin' onRouteChange={this.onRouteChange} updateUser={this.updateUser} />);\n    }\n\n    else if(this.state.route === 'register') {\n      output.push(<Register key='register' onRouteChange={this.onRouteChange} updateUser={this.updateUser} />);\n    }\n\n    else {\n        output.push(<Rank key='rank' user={this.state.user}/>);\n        output.push(<ImageLinkForm key='imageLinkForm'\n          onInputChange={this.onImageLinkChange} \n          onButtonSubmit={this.onDetectClick}\n        />);\n        output.push(<FaceRecognition key='faceRecognition' faceRegionBoxes={this.state.faceRegionBoxes} imgSrc={this.state.imageLink} />);\n    }\n\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particleOptions} \n        />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={this.state.isSignedIn} />\n        <Logo />\n        {output}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}